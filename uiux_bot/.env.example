# UI/UX Lesson Telegram Bot - Environment Variables
# Rename this file to .env and fill in your actual values

# Telegram Bot Token (required)
TELEGRAM_BOT_TOKEN=your_telegram_bot_token

# OpenAI API Key (required)
OPENAI_API_KEY=your_openai_api_key

# OpenAI Model to use (optional, defaults to gpt-4)
# Options: gpt-4, gpt-3.5-turbo, gpt-4o
OPENAI_MODEL=gpt-4

# Unsplash API Key (required for image generation)
# Get one at: https://unsplash.com/developers
# If not provided, local fallback images will be used
UNSPLASH_API_KEY=your_unsplash_api_key

# Pexels API Key (optional: For additional image source)
PEXELS_API_KEY=your_pexels_api_key

# Channel ID for broadcasting lessons (optional)
# Format: -100123456789 (for public channels) or @channelname (for channels with username)
CHANNEL_ID=

# Admin User IDs (comma-separated list of Telegram user IDs)
# These users will have access to admin commands
ADMIN_USER_IDS=123456789,987654321

# Logging level (optional, defaults to INFO)
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Log file path (for Docker deployment)
LOG_FILE=/app/data/bot.log

# Data directory for persistent storage
DATA_DIR=/app/data

# Request timeout in seconds (optional, defaults to 30)
REQUEST_TIMEOUT=30

# Timezone (defaults to Asia/Kolkata)
TZ=Asia/Kolkata

# IMAGE GENERATION SETTINGS
ENABLE_DALLE_IMAGES=False            # Set to True to enable DALL-E image generation
DALLE_MODEL=dall-e-2                 # Options: dall-e-2, dall-e-3
IMAGE_PREFERENCE=dalle,unsplash,pexels,local  # Order of image sources to try
SAVE_IMAGES_LOCALLY=True             # Save online images locally for future use

# BOT CONFIGURATION
# ... existing code ... 